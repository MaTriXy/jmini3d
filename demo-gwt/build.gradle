buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.gretty:gretty:4.0.3'
    }
}

apply plugin: 'java'
apply plugin: 'org.gretty'

archivesBaseName = 'jmini3d-gwt_demo'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation 'org.gwtproject:gwt-user:2.10.0'
    implementation 'org.gwtproject:gwt-dev:2.10.0'
    implementation 'com.github.mobialia:gwtgl:1.0.0'
    implementation 'com.github.mobialia:gwtgl:1.0.0:sources'
    implementation project(':core')
    implementation project(path: ':core', configuration: 'archives')
    implementation project(':gwt')
    implementation project(path: ':gwt', configuration: 'archives')
    implementation project(':demo-common')
    implementation project(path: ':demo-common', configuration: 'archives')
}

clean.doFirst {
    delete "${project.projectDir}/src/main/gwt-unitCache"
    delete "${project.projectDir}/src/main/webapp/WEB-INF"
    delete "${project.projectDir}/src/main/webapp/jmini3d_demo"
}

task compileGwt(dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.projectDir}/src/main/webapp/"
    ext.extraDir = "${project.buildDir}/extra"

    sourceSets.main.java.srcDirs.each{ dir ->
        inputs.dir dir
    }
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    doFirst {
        file(buildDir).mkdirs()
    }

    mainClass = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.java.classesDirectory,  // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args =
            [
                    'jmini3d.gwt.demo',
                    '-war', buildDir,
                    '-extra', extraDir,
                    '-logLevel', 'INFO',
                    '-localWorkers', '2',
                    '-style', 'PRETTY',
                    '-XdisableCastChecking',   // Disables runtime checking of cast operations. This can reduce compiled file sizes.
                    '-XdisableClassMetadata',  // Disables some java.lang.Class methods. This can reduce compiled file sizes.
            ]

    maxHeapSize = '512M'
}

jar.dependsOn compileGwt

task gwtSuperDev(dependsOn: classes, type: JavaExec) {

    mainClass = 'com.google.gwt.dev.codeserver.CodeServer'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.runtimeClasspath,       // Deps
        ]
    }

    args =
            [
                    'jmini3d.gwt.demo',
            ]

    maxHeapSize = '512M'
}

task copyResources(type: Copy)

copyResources {
    from '../demo-common/resources'
    into 'src/main/webapp/resources'
    include('**/*')
}

compileGwt.dependsOn copyResources

task copyShaders(type: Copy)

copyShaders {
    from '../core/shaders'
    into 'src/main/webapp/shaders'
    include('**/*')
}

compileJava.dependsOn copyShaders

gretty {
    servletContainer = 'tomcat10'
    contextPath = '/jmini3d'
}